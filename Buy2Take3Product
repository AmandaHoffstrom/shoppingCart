/**
 *  Subclass representing a  product to be  purchased 
 *  (using the formula "buy 2 take 3") for the second 
 *  assignment in DIT948, 2015 edition.
 *  It extends the <tt>Product<tt> class with one instance 
 *  variable
 */

public class Buy2Take3Product extends Product {

	
	private final Product original;

	/**
	 * Construct a Buy2Take3 product
	 * If the price of this product can not be reduced
	 * you should print a message to the user and terminate the 
	 * program
	 * @param original
	 */
	public Buy2Take3Product(Product original) {
		super(original);
		this.original = original;
		if(!original.canBeReduced())
			handle_invalidUserInput();
		
	}


	

	/**temp_product = new Buy2Take3Product(temp_producti);
	 * Return false if the product price can not be
	 * reduced
	 * @return 
	 */
	public boolean canBeReduced() {
		
		return false;
	}

	/**
	 * Return the unit price of a product using the
	 * formula "Buy2Take3"
	 * @param cart shopping cart
	 * @return unit price 
	 */
	public double getPrice() {

		return original.getPrice();
	}
	
	private void handle_invalidUserInput(){
		System.err.println("The price of "+ getName() + " can not be reduced");
		System.exit(1);
	}
}
